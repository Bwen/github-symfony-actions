name: Create a release

on:
  workflow_dispatch:

jobs:

  semver:
    if: github.ref_name == 'master'
    runs-on: ubuntu-latest

    outputs:
      tag_major: ${{ steps.get_tag.outputs.tag_major }}
      tag_minor: ${{ steps.get_tag.outputs.tag_minor }}
      tag: ${{ steps.get_tag.outputs.tag }}
      repo_owner: ${{ steps.get_tag.outputs.repo_owner }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get next semantic version
        id: get_tag
        run: |
          semver=$(npx semantic-release -b master -p -d | grep 'The next release' | awk '{print $NF}')
          echo "tag_major=v"$(echo "$semver" | awk -F \. {'print $1'}) >> $GITHUB_OUTPUT
          echo "tag_minor=v"$(echo "$semver" | awk -F \. {'print $1"."$2'}) >> $GITHUB_OUTPUT
          echo "tag=v"$(echo "$semver") >> $GITHUB_OUTPUT
          echo "repo_owner=${OWNER,,}" >> $GITHUB_OUTPUT
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Debug tag name
        run: |
          echo ${{ steps.get_tag.outputs.tag_major }}
          echo ${{ steps.get_tag.outputs.tag_minor }}
          echo ${{ steps.get_tag.outputs.tag }}
          echo ${{ steps.get_tag.outputs.repo_owner }}

  build-push:
    needs: semver
    if: ${{ needs.semver.outputs.tag }}
    runs-on: ubuntu-latest
    env:
      IMAGE_MAJOR_TAG: ${{ needs.semver.outputs.tag_major }}
      IMAGE_MINOR_TAG: ${{ needs.semver.outputs.tag_minor }}
      IMAGE_TAG: ${{ needs.semver.outputs.tag }}
      REPO_OWNER: ${{ needs.semver.outputs.repo_owner }}

    steps:
      - name: Checkout Release Tag
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ghcr.io/${{ env.REPO_OWNER }}/symfony-gh-actions:latest
            ghcr.io/${{ env.REPO_OWNER }}/symfony-gh-actions:${{ env.IMAGE_MAJOR_TAG }}
            ghcr.io/${{ env.REPO_OWNER }}/symfony-gh-actions:${{ env.IMAGE_MINOR_TAG }}
            ghcr.io/${{ env.REPO_OWNER }}/symfony-gh-actions:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=ghcr.io/${{ env.REPO_OWNER }}/symfony-gh-actions:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ env.REPO_OWNER }}/symfony-gh-actions:buildcache,mode=max

  create_release:
    needs: [semver, build-push]
    if: ${{ needs.semver.outputs.tag }}
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ needs.semver.outputs.tag }}

    steps:
      - name: Github Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.IMAGE_TAG }}
          generate_release_notes: true
